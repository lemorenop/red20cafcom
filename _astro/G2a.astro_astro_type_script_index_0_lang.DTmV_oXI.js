import{w as h}from"./BaseChart.BPIYNeR_.js";import{L as g}from"./LineChart.d0G-umA_.js";import{g as o}from"./colors.DR0mxEkc.js";class p extends g{setupControls(){this.setupCountrySelect(),this.setupResetButton()}setupCountrySelect(){const n=[...new Set(this.rawData.map(t=>t.region))].filter(t=>t!==null).sort(),a=Object.fromEntries(n.map(t=>[t,new Set]));this.rawData.forEach(t=>{t.region&&t.country!==null&&a[t.region].add(t.country)}),Object.entries(a).forEach(([t,e])=>{e.size===0&&delete a[t]}),this.countrySelect=this.container.querySelector("#country-select"),this.countrySelect&&(Object.entries(a).forEach(([t,e])=>{const r=document.createElement("optgroup");r.label=t,e.forEach(s=>{const i=document.createElement("option");i.value=s,i.textContent=s,r.appendChild(i)}),this.countrySelect.appendChild(r)}),this.countrySelect.addEventListener("change",()=>this.updateChart()))}updateChart(){const n=this.countrySelect.value;if(n){const a=this.rawData.filter(t=>t.country===n);if(a.length>0){const t=this.getAveragesData().filter(e=>e.region===a[0].region);t.length>0&&(this.chart.data.datasets.splice(0,1/0),this.chart.data.datasets.push({label:a[0].country,data:this.chart.data.labels.map(e=>a.find(r=>r.year===e).cleanEnergy),borderColor:o(0),backgroundColor:o(0),tension:.1,borderWidth:2}),this.chart.data.datasets.push({label:a[0].region,data:this.chart.data.labels.map(e=>t.find(r=>r.year===e).cleanEnergy),borderColor:o(1),backgroundColor:o(1),tension:.1,borderWidth:2}),this.chart.legendNeedsUpdate=!0,this.chart.update())}}}setupResetButton(){this.resetButton=this.container.querySelector("#resetButton"),this.resetButton&&this.resetButton.addEventListener("click",()=>{this.countrySelect.value="",this.chart.data=this.getData(),this.chart.legendNeedsUpdate=!0,this.chart.update()})}getType(){return"line"}getAveragesData(){return this.rawData.filter(n=>n.country===null)}getData(){const n=this.getAveragesData().reduce((e,r)=>(r.region&&(e[r.region]||(e[r.region]=[]),e[r.region].push(r)),e),{}),a=[...new Set(this.rawData.map(e=>e.year))],t=Object.entries(n).map(([e,r],s)=>{const i=r.reduce((l,u)=>(l[u.year]=u.cleanEnergy,l),{});return{label:e,data:a.map(l=>i[l]||null),borderColor:o(s),backgroundColor:o(s),tension:.1,borderWidth:2}});return{labels:a,datasets:t}}getOptions(){return this.mergeOptions(super.getOptions(),{scales:{y:{display:!1}},plugins:{tooltip:{mode:"index",intersect:!1},datalabels:{backgroundColor:n=>n.dataset.backgroundColor,formatter:n=>this.formattedValue(n),borderRadius:4,color:"white",padding:4}}})}getPlugins(){return[...super.getPlugins(),h]}}function c(){try{new p("C5-G2a")}catch{}}document.readyState==="loading"?document.addEventListener("DOMContentLoaded",c):c();
