import{y as m}from"./BaseChart.BPIYNeR_.js";import{B as p}from"./BarChart.KOKhGWM3.js";import{g as o}from"./colors.DR0mxEkc.js";class h extends p{getData(){const r=new m(this.rawData),c={percentage:this.t("Promedio"),oecdHighIncomeNonLacAverage:this.t("OCDE ingresos altos no ALyC"),latinAmericaAverage:this.t("AmÃ©rica Latina"),caribbeanAverage:this.t("Caribe")},n={percentage:"bar",oecdHighIncomeNonLacAverage:"line",latinAmericaAverage:"line",caribbeanAverage:"line"},d={line:{pointStyle:"circle",borderWidth:2,pointRadius:0},bar:{pointStyle:"circle"}},t=r.toLinearChart({xAxisKey:"country",series:Object.entries(c).map(([e,g],i)=>({dataKey:e,label:g,type:n[e],order:n[e]==="line"?0:1,backgroundColor:o(i),borderColor:o(i),...d[n[e]]}))}),a=t.labels.findIndex(e=>e.toString()==="null");t.labels[a]="",t.datasets.forEach(e=>{e.data[a]=null});for(let e=0;e<a;e++)t.datasets[3].data[e]=null;for(let e=a+1;e<t.datasets[2].data.length;e++)t.datasets[2].data[e]=null;return t}getOptions(){return this.mergeOptions(super.getOptions(),{interaction:{intersect:!0,mode:"index"},scales:{x:{grid:{display:!1},ticks:{autoSkip:!1,maxRotation:90,minRotation:90}},y:{ticks:{callback:this.ticksAsPercentage()}}},plugins:{tooltip:{labelAsPercentage:!0},htmlLegend:{labels:{filter:r=>r.text!==this.t("Promedio")}}}})}}function s(){try{new h("C1-G7b")}catch{}}document.readyState==="loading"?document.addEventListener("DOMContentLoaded",s):s();
