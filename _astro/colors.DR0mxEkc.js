const o=[{hex:"#AFCA11",rgb:"175,202,17"},{hex:"#3B254F",rgb:"59,37,79"},{hex:"#6BA6C5",rgb:"107,166,197"},{hex:"#005E66",rgb:"0,94,102"},{hex:"#AE805F",rgb:"174,128,95"},{hex:"#EFAD25",rgb:"239,173,37"},{hex:"#A7201C",rgb:"167,32,28"},{hex:"#4D4D4D",rgb:"77,77,77"},{hex:"#000000",rgb:"0,0,0"}],f={BLUE:["#f4f8fb","#e8eff6","#ccdfeb","#9fc5da","#6ba6c5","#488baf","#367093","#2d5a77","#284d64","#264154","#192b38"]};function x(a,t,n={}){const{startIndex:e=0,step:r=1,reverse:s=!1}=n;if(t<=0)throw new Error("k must be greater than 0");if(e<0)throw new Error("startIndex must be greater than or equal to 0");if(r<=0)throw new Error("step must be greater than 0");const h=Math.floor((a.length-e)/r);if(t>h)throw new Error(`Not enough colors available. Maximum possible: ${h}`);let b=Array.from({length:t},(l,g)=>a[e+g*r]);return s?b.reverse():b}function c(a,t="hex",n){const e=(a%o.length+o.length)%o.length;if(t==="hex")return o[e].hex;const r=o[e].rgb.split(",").map(Number),s=n!==void 0?Math.max(0,Math.min(1,n)):1;return s===1?`rgb(${r.join(",")})`:`rgba(${r.join(",")},${s})`}export{x as a,f as c,c as g};
