import{a as i,b as d,c as r}from"./querySelectors.Qy2Qr1Pd.js";class u{elements;min;max;boundHandleUpdate;boundHandleChange;_onUpdate=null;_onChange=null;constructor(e){const t=i(document,`[data-range-id=${e}]`);this.elements={container:t,startInput:r(t,'[data-range-input="start"]'),startValue:d(t,'[data-range-value="start"]'),endInput:r(t,'[data-range-input="end"]'),endValue:d(t,'[data-range-value="end"]'),track:i(t,"[data-range-track]")},this.min=Number(this.elements.startInput.min),this.max=Number(this.elements.startInput.max),this.boundHandleChange=this.handleChange.bind(this),this.boundHandleUpdate=this.handleUpdate.bind(this),this.bindEvents(),this.update()}handleChange(e){if(this._onChange){const[t,n]=this.getValues();this._onChange(t,n)}}handleUpdate(e){if(this.update(),this._onUpdate){const[t,n]=this.getValues();this._onUpdate(t,n)}}set onUpdate(e){this._onUpdate=e}get onUpdate(){return this._onUpdate}set onChange(e){this._onChange=e}get onChange(){return this._onChange}bindEvents(){this.elements.startInput.addEventListener("input",this.boundHandleUpdate),this.elements.startInput.addEventListener("change",this.boundHandleChange),this.elements.endInput.addEventListener("input",this.boundHandleUpdate),this.elements.endInput.addEventListener("change",this.boundHandleChange)}unbindEvents(){this.elements.startInput.removeEventListener("input",this.boundHandleUpdate),this.elements.startInput.removeEventListener("change",this.boundHandleChange),this.elements.endInput.removeEventListener("input",this.boundHandleUpdate),this.elements.endInput.removeEventListener("change",this.boundHandleChange)}getValues(){let e=Number(this.elements.startInput.value),t=Number(this.elements.endInput.value);return t-e<0&&([e,t]=[t,e]),[e,t]}update(){const[e,t]=this.getValues();this.elements.startValue.value=e.toString(),this.elements.endValue.value=t.toString();const n=(e-this.min)/(this.max-this.min),h=(t-this.min)/(this.max-this.min);this.elements.container.style.setProperty("--range-thumb-left-ratio",n.toString()),this.elements.container.style.setProperty("--range-thumb-right-ratio",h.toString())}}const l=document.querySelectorAll(".range-selector"),a=new Map;l.forEach(s=>{const e=s.getAttribute("data-range-id");e&&a.set(e,new u(e))});window.rangeSelectors=a;window.dispatchEvent(new CustomEvent("rangeSelectorReady",{detail:a}));
