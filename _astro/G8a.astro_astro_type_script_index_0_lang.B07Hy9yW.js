import{B as p}from"./BaseChart.BPIYNeR_.js";import{g as l}from"./colors.DR0mxEkc.js";const x={id:"verticalLineSegment",beforeDatasetsDraw:(i,c,m)=>{const{ctx:a,data:n}=i,o=new Map;n.datasets.forEach(e=>{e.data.forEach(t=>{o.has(t.x)||o.set(t.x,[]),o.get(t.x).push(parseFloat(t.y))})}),a.save(),a.strokeStyle="#3B254F",a.lineWidth=2,o.entries().forEach(([e,t])=>{let s=Math.min(...t),r=Math.max(...t);const d=i.scales.x.getPixelForValue(e);s=i.scales.y.getPixelForValue(s),r=i.scales.y.getPixelForValue(r),a.beginPath(),a.moveTo(d,s),a.lineTo(d,r),a.stroke()}),a.restore()}};class g extends p{getType(){return"line"}getData(){this.rawData.forEach((e,t)=>{Object.entries(e).forEach(([s,r])=>{s!=="country"&&(this.rawData[t][s]=parseFloat(r))})}),this.rawData.sort((e,t)=>e.maximumMaxSpeed-t.maximumMaxSpeed);const c=this.rawData.map(e=>e.country),m={minimumMaxSpeed:this.t("Mínimo"),maximumMaxSpeed:this.t("Máximo"),maxSpeedMedian:this.t("Mediana")},a={};for(const e of this.rawData)a[e.country]=[e.minimumMaxSpeed,e.maximumMaxSpeed,e.maxSpeedMedian];const n=[l(0),l(2),l(1)],o=Object.entries(m).map(([e,t],s)=>({type:"scatter",label:t,data:this.rawData.map(r=>({x:r.country,y:r[e]})),backgroundColor:n[s],borderColor:n[s],borderWidth:1,pointStyle:"circle",pointHoverRadius:4,radius:3}));return{labels:c,datasets:[...o]}}getOptions(){return this.mergeOptions(super.getOptions(),{interaction:{intersect:!1,mode:"index"},scales:{y:{type:"linear",title:{display:!0,text:this.t("Velocidad de descarga máxima en Mbps")}},x:{type:"category"}},plugins:{tooltip:{}}})}getPlugins(){return[...super.getPlugins(),x]}}function u(){try{new g("C1-G8a")}catch{}}document.readyState==="loading"?document.addEventListener("DOMContentLoaded",u):u();
